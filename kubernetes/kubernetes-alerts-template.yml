groups:
  - name: kubernetes-alerts
    rules:
      # Node Alerts
      - alert: K8sNodeNotReady
        expr: kube_node_status_condition{condition="Ready",status="true"} == 0
        for: 5m
        labels:
          severity: critical
          component: node
        annotations:
          summary: "Node not ready (node: {{ $labels.node }})"
          description: "Node {{ $labels.node }} has been in NotReady state for more than 5 minutes"

      - alert: K8sNodeDiskPressure
        expr: kube_node_status_condition{condition="DiskPressure",status="true"} == 1
        for: 5m
        labels:
          severity: critical
          component: node
        annotations:
          summary: "Node disk pressure (node: {{ $labels.node }})"
          description: "Node {{ $labels.node }} is under disk pressure"

      # Pod Alerts
      - alert: K8sPodCrashLooping
        expr: rate(kube_pod_container_status_restarts_total[5m]) * 60 * 5 > 2.5
        for: 1m
        labels:
          severity: critical
          component: pod
        annotations:
          summary: "Pod is crash looping (namespace: {{ $labels.namespace }}, pod: {{ $labels.pod }})"
          description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} has been restarting frequently"

      - alert: K8sPodHighMemoryUsage
        expr: sum by(namespace, pod, container) (container_memory_working_set_bytes{container!=""}) / sum by(namespace, pod, container) (kube_pod_container_resource_limits{resource="memory"}) > 0.85
        for: 5m
        labels:
          severity: warning
          component: pod
        annotations:
          summary: "High memory usage (namespace: {{ $labels.namespace }}, pod: {{ $labels.pod }}, container: {{ $labels.container }})"
          description: "Container {{ $labels.container }} in pod {{ $labels.pod }} is using more than 85% of its memory limit"

      - alert: K8sPodHighCpuUsage
        expr: sum by(namespace, pod, container) (rate(container_cpu_usage_seconds_total{container!=""}[5m])) / sum by(namespace, pod, container) (kube_pod_container_resource_limits{resource="cpu"}) > 0.85
        for: 5m
        labels:
          severity: warning
          component: pod
        annotations:
          summary: "High CPU usage (namespace: {{ $labels.namespace }}, pod: {{ $labels.pod }}, container: {{ $labels.container }})"
          description: "Container {{ $labels.container }} in pod {{ $labels.pod }} is using more than 85% of its CPU limit"

      - alert: K8sPodImagePullBackOff
        expr: kube_pod_container_status_waiting_reason{reason=~"ImagePullBackOff|ErrImagePull"} == 1
        for: 5m
        labels:
          severity: critical
          component: pod
        annotations:
          summary: "Image pull error (namespace: {{ $labels.namespace }}, pod: {{ $labels.pod }})"
          description: "Failed to pull image for container {{ $labels.container }} in pod {{ $labels.pod }}"

      - alert: K8sPodStuckInPending
        expr: kube_pod_status_phase{phase="Pending"} == 1
        for: 15m
        labels:
          severity: warning
          component: pod
        annotations:
          summary: "Pod stuck in Pending (namespace: {{ $labels.namespace }}, pod: {{ $labels.pod }})"
          description: "Pod {{ $labels.pod }} has been in Pending state for more than 15 minutes"

      - alert: K8sPodOOMKilled
        expr: kube_pod_container_status_last_terminated_reason{reason="OOMKilled"} == 1
        for: 0m
        labels:
          severity: critical
          component: pod
        annotations:
          summary: "Container OOMKilled (namespace: {{ $labels.namespace }}, pod: {{ $labels.pod }}, container: {{ $labels.container }})"
          description: "Container {{ $labels.container }} in pod {{ $labels.pod }} was killed due to out of memory"

      # Deployment Alerts
      - alert: K8sDeploymentReplicasMismatch
        expr: kube_deployment_spec_replicas != kube_deployment_status_replicas_available
        for: 15m
        labels:
          severity: warning
          component: deployment
        annotations:
          summary: "Deployment replicas mismatch (namespace: {{ $labels.namespace }}, deployment: {{ $labels.deployment }})"
          description: "Deployment {{ $labels.deployment }} has not matched the expected number of replicas for 15 minutes"

      - alert: K8sDeploymentGenerationMismatch
        expr: kube_deployment_status_observed_generation != kube_deployment_metadata_generation
        for: 5m
        labels:
          severity: warning
          component: deployment
        annotations:
          summary: "Deployment generation mismatch (namespace: {{ $labels.namespace }}, deployment: {{ $labels.deployment }})"
          description: "Deployment {{ $labels.deployment }} has not progressed to the latest version for 5 minutes"

      # Service Alerts
      - alert: K8sServiceEndpointDown
        expr: kube_endpoint_address_available == 0
        for: 5m
        labels:
          severity: critical
          component: service
        annotations:
          summary: "Service endpoint down (namespace: {{ $labels.namespace }}, service: {{ $labels.service }})"
          description: "Service {{ $labels.service }} has no endpoints available"

      # PersistentVolume Alerts
      - alert: K8sPVCPending
        expr: kube_persistentvolumeclaim_status_phase{phase="Pending"} == 1
        for: 5m
        labels:
          severity: warning
          component: storage
        annotations:
          summary: "PVC pending (namespace: {{ $labels.namespace }}, pvc: {{ $labels.persistentvolumeclaim }})"
          description: "PersistentVolumeClaim {{ $labels.persistentvolumeclaim }} has been in Pending state for 5 minutes"

      # Job Alerts
      - alert: K8sJobFailed
        expr: kube_job_status_failed > 0
        for: 0m
        labels:
          severity: warning
          component: job
        annotations:
          summary: "Job failed (namespace: {{ $labels.namespace }}, job: {{ $labels.job_name }})"
          description: "Job {{ $labels.job_name }} has failed"

      # CronJob Alerts
      - alert: K8sCronJobSuspended
        expr: kube_cronjob_spec_suspend == 1
        for: 0m
        labels:
          severity: info
          component: cronjob
        annotations:
          summary: "CronJob suspended (namespace: {{ $labels.namespace }}, cronjob: {{ $labels.cronjob }})"
          description: "CronJob {{ $labels.cronjob }} is suspended"